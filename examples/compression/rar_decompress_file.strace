11609 close(3)                          = 0
11609 access("/home/hugo/.rarrc", F_OK) = -1 ENOENT (No such file or directory)
11609 access("/etc/.rarrc", F_OK)       = -1 ENOENT (No such file or directory)
11609 access("/etc/rar/.rarrc", F_OK)   = -1 ENOENT (No such file or directory)
11609 access("/usr/lib/.rarrc", F_OK)   = -1 ENOENT (No such file or directory)
11609 access("/usr/local/lib/.rarrc", F_OK) = -1 ENOENT (No such file or directory)
11609 access("/usr/local/etc/.rarrc", F_OK) = -1 ENOENT (No such file or directory)
11609 openat(AT_FDCWD, "/usr/local/etc/.rarrc", O_RDONLY) = -1 ENOENT (No such file or directory)
11609 fstat(1, {st_dev=makedev(0, 0x17), st_ino=3, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(0x88, 0), st_atime=1643703024 /* 2022-02-01T03:10:24.344413056-0500 */, st_atime_nsec=344413056, st_mtime=1643703024 /* 2022-02-01T03:10:24.344413056-0500 */, st_mtime_nsec=344413056, st_ctime=1643694583 /* 2022-02-01T00:49:43.344413056-0500 */, st_ctime_nsec=344413056}) = 0
11609 write(1, "\n", 1)                 = 1
11609 write(1, "RAR 5.50   Copyr", 16)  = 16
11609 write(1, "ight (c) 1993-20", 16)  = 16
11609 write(1, "17 Alexander Ros", 16)  = 16
11609 write(1, "hal   11 Aug 201", 16)  = 16
11609 write(1, "7", 1)                  = 1
11609 write(1, "\nTrial version  ", 16) = 16
11609 write(1, "           Type ", 16)  = 16
11609 write(1, "'rar -?' for hel", 16)  = 16
11609 write(1, "p\n", 2)                = 2
11609 stat("files.rar", {st_dev=makedev(0x8, 0x5), st_ino=813587, st_mode=S_IFREG|0664, st_nlink=1, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=1179, st_atime=1643702616 /* 2022-02-01T03:03:36.121361608-0500 */, st_atime_nsec=121361608, st_mtime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_mtime_nsec=125361644, st_ctime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_ctime_nsec=125361644}) = 0
11609 mmap(NULL, 1052672, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7a95dfe000
11609 brk(0x20e5000)                    = 0x20e5000
11609 stat("files.rar", {st_dev=makedev(0x8, 0x5), st_ino=813587, st_mode=S_IFREG|0664, st_nlink=1, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=1179, st_atime=1643702616 /* 2022-02-01T03:03:36.121361608-0500 */, st_atime_nsec=121361608, st_mtime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_mtime_nsec=125361644, st_ctime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_ctime_nsec=125361644}) = 0
11609 mmap(NULL, 1052672, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7a95cfd000
11609 openat(AT_FDCWD, "/dev/urandom", O_RDONLY) = 3
11609 fstat(3, {st_dev=makedev(0, 0x5), st_ino=10, st_mode=S_IFCHR|0666, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=0, st_rdev=makedev(0x1, 0x9), st_atime=1643692462 /* 2022-02-01T00:14:22.867999951-0500 */, st_atime_nsec=867999951, st_mtime=1643692462 /* 2022-02-01T00:14:22.867999951-0500 */, st_mtime_nsec=867999951, st_ctime=1643692462 /* 2022-02-01T00:14:22.867999951-0500 */, st_ctime_nsec=867999951}) = 0
11609 ioctl(3, TCGETS, 0x7ffda36d7c00)  = -1 EINVAL (Invalid argument)
11609 read(3, "\357.\335\343\220&\r\34%\355\343Lq\202j=\7\340C\320_\340peV\362|\376\30\30\350\32y\360A\307\262\6ISI.\361\334\240\224\351\\\4M\2C\3766\372\214|1h\375\242\230#}\205\2777\301]\315\22Nx\274\261\373\327\276Jw\352\254\214j\252\"`^\5\17\235\247\7\301\f\362D\200\375f\243#q\313ml\217-X\240\307\251O\222.H\363\327\313;\340\221\32\350\245\253w\272\313\f\205\252\230\301\236\220j\250\250|\366\224_\353\216'\236\350P\35\205l\234\260\220I\365I \266\310B\344md\206t\232\234\260\225\356\2457\372\3\261.P|\277L\247\233\360\306X\300\304\366[\236\4\272\376\345)\21\234j aO\335\201e`\352y\277\221\277:\213\343\3}\305\t\373 \23\320\306v\322:\250+\266\273\367\n\242\262\237\262\357\272\f\00618\21495\3224\234\376\261N\273\360\271\26\177\33p\303yne]d\341/\214\216\257\241\3740\215U\30\251\20*\363y\"\253v\314\243)D-\344\260U\370t\337\232\245\323\254\216\227\360\373\t\336B\376\330\245\343\17\222\30\205\3562,@\313\250\327g\27]\237/\242t2T\24,\37\272xF6\372\330\344\25Wg\355\0\205;^\\\0347*q%\313\372\352).b\22\231v$>\235\336\364\35\3636\220\245S\3\227Sg\305\354uk>\307-\217\255\2218\265X)\260\262_\363\212p\7\373\275\22\370\33644\326c\277F\27\232\304 w\274\207\30\21\205\360\31\240\257!f^\377\215Ig\334\"\366\375\16;4\2517\16\223o\250C\240:\34\233\310WK \250\177\337r\224\342(\17\321\361\333\225\230\33027\352\326w0\254\220\3342$\305\201\177\305\244\253\225\243\21\333#\312\326\0214&c\16\334\236\273l\307t\201\212<=\202v\306\357\312\271\23\264\377=\252r\325%\10\264\337\302\fv\6G\213\337E\337\32|>\352bjP\314\317\33+\257\2337S\217\363\377(\266\236\204\2015\215\21\367\t\275\2\246T\241\206nU\244\317C\4xD\2343\3105\fb\362=FbG\17\304\f\304=\315\32C\36\32\202\217\346s\371/\\\23\25\24G\261<\302\360\311\352\377k\217\264\251O\311\345\304\26\240,\205\31<\325Y\231\250\341+\225\32%::0\343D\247\325\250\257\254\203<f\313p*\17\t\34\fP\17\263\342\274\33\373&8\2\324\374o|\326}\370\231\361\352\204\257\v\213\200\3371\315uF\263Lo\252\7\276\333\204\326\371\204\1\364\17\360;\346{\27\27\373\v\f*\350\235\213zEY\1\254 \207\226\206+12\237\277\270\336]\301\23\364\37\244\vl\254\247b\332\253\231[\321z\34P\32\35\213\270S\256\v@\232aU>\250\316\351\31#\366\342\356>\250\215W\257nJ\340]\306!\354\36\345R\21a\fe\241\306\n\1.\306-\265\"4x\260\224\2\1-\310@\\$\201\200\326>e\3356]\371X @m:=\32\323([\314_H\221\6\233\253\334g\\\236-\372\34%p\316v\356&\35iy\10t6\355\254\20\357\r|\312=\302O\30\361\336\364\306\177\214\34\254\250\202@l\201\"7W\34\21\345\35\240\27\274\3\362\373\261\27\274`\346\2\306\264\241\311\306\31E\17\216HS\315-\205?\r\341\323\361w\262\25\227\373\10\267\370Z\342\203xO=W\252w[\373F\34l\307\0\362U5\232t\257\270\346z\260\2312\276\0Ba\7\265\16\2153kos\2324\2\320S3a6\323M\303\341\343\16\273\\\316\371%\251\354\2718\347^_\4Q\352MR0Vz\236\361^<\321\353\276\311SW\243\352\30\266\10\20\355\365\6<\212\376\326\347\367a+\20\220\350\313#\253;8=\362L/\375\343\7\215\326\331\341\"U'}_\265\347\244\372@\273\353p@ty@\34'\347<\332\25\243\241\237:\322r\\7\351\360\22\362a\\\234Bf-2G\253by[\243\361\344\260\326\310J@I>\vD\375\225\312KwHe\4;\69\211t\212\262\277\17\321\362\232G\314\235\5\233\3\304\207\261z\374\320\235d0\5\366!\32\302\367\266\37\313\311\367\325\354qP\21\261[Bf\235\227\241\251\10\26M\237\16<\312\30\366\203\245pc\240\265\317YM\3128\320s\241?\260g\313\341Zqq?\2548\365+\216\22\344;\233\371\333\227\371g\304\337\232\361[\377\4\352\370\210\274=\313v\266\26\301U\300\233\34\16\265\232\36\7\313\321\236\315\250Nx[=N[-\227\302\3\356O}\357\204\301\37\252!\330\214\313]\241c2\363D\6R\317M^\311T\350RC\350\305\231\34\261\305|\361\346\n#\357?\212\1\365\23\3\272\2Z\316\4\266h\373S\377\n\22\341\255\5\232X\214F\274=U\242\26[\347^\27\245G\271i\215\274I\344y<\235a\210\322/\271\347\267\366\33\177K\210\325%\256\201\226\341\10\f_\214\37\17\235\217nV\206\2625\351P\343\t\326\342\312\332Q\26\\\214\tV\223\237\0\255j[q0\30\237\341\226\306R\336\v\17\236[\200\7\354\1n+:&C\323y\306cw\342e&\231v^?\23\220f\301H\253.\251\267\22\"W\365\221\336\331\316x}\306R\365\241\360\2648\10\254Z\254\317\177\203\210\5\232$\27\25\253\27K\334B\307\221\3D\206\35\372%\221\350\270u* \366j]\241\355\270\251\201|\361\264\250\354\276\221\\\323\21S\346P>\320HEF\f\355p\354\233\324_\375\305\371\"14\245\233\30Q\255K\344\347\10]\271Z\356g\361\324\260r\235\367\202\322\331\7\332\23\n\354\377\239\330\"DH\345\214\261&\313\206\365\277\270=\326\263\177\24\367\377)\33\234\254\322\237\243\352\272\v\344\343\253\351\246\335\253J\350k\202\353\353\252\244\f[\221\4R\3:\342\241\365|RZ\326\245`\203\213\325\342B\333\\\371\325f\205\337\346k\264\226}\224\206c\343Z\202\305?PZ\205\266\246\374\326-j\374\256T/1pm\262\234\250\22+S\301J\352\253\207\240\374S\263\257\337\313\5L\1\271\357P\222\315\206H\323\20\227\342\204\360\304q\245\207\265\305\355\266\31F'\326\245<*\347\336\367\23\352\214\266\327P~\17\302\33c\257\323:\tF\367\326\233\270i\277\f\202\r\f\\\260vz\33\326\357$\362:\326\253\242=\351gg\321\350kt\311?\207\346y\356(,i~y\33\305U{Xv\243S\262\231\312\326\215\222\362\314\334\23\243\305\245\260\204Ab\313a\265\371m\233!\321\303/\325A|P\277\204\312\261\274\364\36\330\306\231\275\203\312\320\277\336+j3\200M\227cT\7pPz\246\251\260\373d<\3\315\"\361yI2z2w\306\231\335{\21\263\266^\363\243&\314\344\375z*\2028\357}6\202\311\325\366\245 \233-\20]e$S\320<\f=\306q$\20\245\341K\261\366\336\21d\275\246}\255\212B\230\222\245.\235\0353\243\272)bu[\301\270&\316\222\233\352\223Y\306f\246\261\352\320[\27\230\31\37\3553_\356\335~\261\25\327\332}B\307v\203\245\222\207\200\30\246\375\32\306+\210.\360\242\31I1\37\332:\t\5\21\343\242]a\363\252\212\331\277\330\303\316\333\253\257\225!\260\31rF\302\264&\376\331#\17Y\264O\324J\206\7N\v<N\360N\323\364Ur\n\212\335\240\210\265\374\353\227\305\303_IPE\201\356r\304\203\270\275,f!\243j\214\215 b\211\36\227\241r\r\205l\334\30\330\377\24\260\23\31[f\26Q}\240E\330\0033\275oX\0241WC%\241\24\221\21@\306\20\372\213\326$2\355l\0(\17\271S\374\261B-\324\324IO\250\326\321!8V\357\345\3034\243i\224\357C\2677\203\35\4\273m\363\206\220M8\374\331\213\343\233\177\212v\264g\261\7\367\354\204$\257\24\344a\357\265\341\24^\0\205xQ30\25\345\341\n\235%\373\211=\302\320\343\223\363\177\332\336*1X\6\3\30\240\222#d\211T\234\342\273R\252>\373-\332\264\363\5\27Q\25Y\220\334\352\32\267\240\342\222\272\331\336\266\325w\334\3253\f\230\264\213\355\24\300\225\32\332z\265\224=p\351)\202\306\215\20\362HM\341d\241FCyt\347`oq\203\356Y\"m\255\332\340\264\7\6i\311\276\375\321\241wW\0055s\35\30]\212\217X\265!\26e;\315\372\17\37\301\6=\f(\314\225v\247\0050IAt_^{\311\301\370\306\326\236^z\250\ff\253I\20\351\330\225\265\20U\21/\317\367\35\276\276\356=:K\2356\1f\250\302\217\27\306\206PL\364\251\0235D\\\25\261MP\274\213\272$V\206\363\32\0244\1\372\257\244\252\331\311\364\265a\31\27\220\360\266\32@\273\202\240\37\177\275\232;>\263\202\233J\336\346|_<\241)Jv\25Qx\361\276\253\245S\0z\226\217\350\315\345-\240\6\201\205C\\\312\222`\272\326M\33\313B\334\232\21f\244\260\273\347=9\245\273\0357\363\22\16\0375\263?\3550\316i\1\277i\264\231\242\361@\342\366r\31\360\277vD? \21UO\2366\215\271\301\266b\373\200t\354\373K\233.\311\235%\321\353\256\2546\220VK\n\330|\320F\26\1\221kXe\274\323E$\317\220\353\250\301f\245\310u\264\355}54_T\330\350\362t\316E\34\256.\315\313\23\3319\203\33T\376\341<\260\357[\300\256\366\10d\304\5\227\317\206\4\n\235\205{\363\236\3\32\367w\254\332B\373\272\263\277\327\343>\251k0a\271hk\0030\215\242f\215\323'\363\222\307\226\261|\272\254\3666\376F\272\341\372\206\212l\270$\367-V\7I\326vL\vbp\36\371+\2270\323\375\374\276B\253\357Y\252\255\255\204$\257\337\224\3443\376l\265Z\303\344\336\226\232\236V\266\341nq\253@\325\32\301(A\373\322\273I\202\247\3726,}\237\r\343\262\245\7\237\206`\362\223\272)\233\264\251\256\2775Te\215\351\301\221:3\334j/\245\265\313;#\347\250\243\377\3\375\215\301\347\332\300\200\336j\250.\240\22\234\16^\302\26#\264\317\t\31\322\220\267\321\276\372\353\325\275-\3659\224\334b\370\315l@\256\363G\365L\307\t\304\231N\0\320\222\321\346\243\35\274\332\243(8\4o9\3446\201\21\370\306=\333\32%\301\254R=H\342K\337h\357l\33b\v\236\244Z'\357%wS\321\26q\th\230vU\225_\204\23\17#\300\363O\351:\0020\5\341\337\216\255\313]\272u\212\323\376] \353B\250\211g<%\32##\217\275\204J\361\332\277(Lo\231\217\237^\30<\301\355q\331U\367\340\5A6\32\31\377\235\227k\275\1iR\272c%F\300A\221X\347\37\365U\234\252:\375\241\265\221>\241#\313\231\314\265\10\177x\247\365\230)\377\f\307\3275\211[;\343\317\330\376H\24 \312\241\305\v\360\222v\212\204\306\2108\23\6\332\371k\260\334>bj\3\37\317>\263ur\2275\252\30\260R\277>p\265\335fJP\2650\233\317\266<W\7\342B'\336\354\2409\212\373/\230(z\vD2\371\333\235\2570G[c\24U\36*\224\270\169\322:<\25\312\f\r(x\177O\243P\243\233\244A\233\352m,j\254\333\313Hc\2502\t\267\277t\7\251y\334\364\2152\372\27\324:\253Z\340\246\210\241b\270D\271=\\1\2626\321K\37\4\7\251\231\315\203\254\r\250K\244\240\24\0316sf,[H\36G\311\323\355s\312\213\262\372\331Yr\322\264O\235\301\332\6m\350\4QFX\177a\231\310n3\303@\232R\33N)\335O\262cu\327\355\303C\261\"\267\273w\34:Z\252\252\231\253\210\302[\6\37o\354y\270\200u\242\0\330\3\25%\254\325\30}|le\333\7\300\267\20r\367\256\204\371\3441\351\266\2645\251b\326a%AL6j\311\fPs\202\210\315\365\247\211\315\203\272\17'\316\273n\320\370\347\34\355\r\36\253h\272\244\214\16\276gW)\300\226\21\237f*\270|\3515 \213\255\31m\302\t\260\313D\215\214B\225\257a\325\r\317hi5\2\256\213/\244\30)Ti\242\217\223\2\nIA\201\210\320\244\215\345\347Z\33%<\3755\\#W\201[\v\226\363\365\322\217\301lYS\v\272\302\244\202\10\315\221V\371SFK\237\35.\256\300?\243\252w\254\363\223#\335N$\326\213t\370e\364\217\325\27u\230a\325\264\335r6\335\271\202\254\3569zH]\273\362U1\273\177\245\367T\207OsEX\35g\226\310gL\212aE|\261\256\36\317E\220O\7\303M\3602\0\21R\3636Q\207{\263\30\r\271\31\266JU\206@\5\342\245vR\217\f\304\24/\272R.\257\n\264;H\3451\37\212\321%r\366\246\3624\245\361`~\332\30H\253\33\265\372|K\275\200k\237@N\35%\256&8\264\242\33\344\322\354#\366\306\345\334\235F\206p\377'\241\326\303\252E\215\37\2300~\25\264\265\30-\225\346\33\6\230\314\240{\326Y\274\2038\0)\0257\317\235\361\270Iv\253\231!!Pc\264\205\32$[\267Q*\320h\375\365\341u!M\242\231\205\4f\202t\273n%\265U\3114\347\371\231\n&s7\227\303\2\32\320\3013\357\0062jy\324\\\250\267\333\303~ \334\177\243\4/#G\374\213\31\320\315\27E\324\247\3368\32<&t\241YH\346\261\250E\241:z&\341\3425g\327\262\241y\262\330\227\340\301\340\r\315;\233\202\350A\242\222\341\257^G\265\364\211\25\0\231\363\317\233;N\35:6^\34\303\261\300\376\233\364>\251cI\216\3170H2\372T&A\266fx5\330K\353\t\314kq5ju:\211447mcc\273\257n\360}\232\201\22\27MRp\306\6Uw\21\230\270\321\357\322\243r\312;h\2151\273N`\332\275\207\212_\276\0\233\234\3020f\222\312\216\222\267X\261\226\330\216\350\244\363\200\271\3413\346\\\350\277\23\254x\354,Sq\350+k\303\241\306dp\325\224q\352t\301\n\3065\266\372\256\361Z\277\0350\350\274\260\226\342\260VC\3\216\312\313\241\250;\356m\306\377\307\254\263R9i\366%\2S\303\367G2\6\245\342\207^\245\376fbY\204\205<%\246\200n\245\304L\254\5oo~VVd\342&\3139u\t$\223\\\260\261\301BH\32<\24\24\tz=\202\n'eA\272A}\237\33\325\224\320\365\26A\360\2642i\r\213\334{\22\214\33\332#\24\330\364d\376\323\350K\234\377&\363n=X\242\375uv\232\327\202\344\7\206O\227\230p\237dC\266\352_C{cg'$\227GrF\17\263q%(\212\221\242\211q\356\35\226\336\264(\247\35\376\321|\233+U\177\333a\10=X\331,\233=\357\251Iw\222\273[i\5\331\0\226\236\"\311ii\212\34\273\370u\263\20\257\274}\331H\23/\3065\275\333\315H\376!}\210B1~\316\35d\222<\213\230\315M[+", 4096) = 4096
11609 close(3)                          = 0
11609 clock_gettime(CLOCK_PROCESS_CPUTIME_ID, {tv_sec=0, tv_nsec=2885542}) = 0
11609 clock_gettime(CLOCK_PROCESS_CPUTIME_ID, {tv_sec=0, tv_nsec=2888859}) = 0
11609 openat(AT_FDCWD, "files.rar", O_RDONLY) = 3
11609 ioctl(3, TCGETS, 0x7ffda36d7e10)  = -1 ENOTTY (Inappropriate ioctl for device)
11609 read(3, "Rar!\32\7\1", 7)         = 7
11609 read(3, "\0", 1)                  = 1
11609 lseek(3, 0, SEEK_CUR)             = 8
11609 read(3, "\363\341\202\353\v\1\5", 7) = 7
11609 read(3, "\7\0\6\1\1\200\200\200\0", 9) = 9
11609 lseek(3, 24, SEEK_SET)            = 24
11609 lseek(3, 0, SEEK_CUR)             = 24
11609 lseek(3, 0, SEEK_CUR)             = 24
11609 read(3, "\344\337i\226$\2\2", 7)  = 7
11609 read(3, "\322\10\6\205\36\264\203\2s\31\234aJ\351\275\223\200\3\1\16hash_tables.py", 34) = 34
11609 lseek(3, 24, SEEK_SET)            = 24
11609 lseek(3, 0, SEEK_CUR)             = 24
11609 lseek(3, 0, SEEK_END)             = 1179
11609 lseek(3, 0, SEEK_CUR)             = 1179
11609 lseek(3, 24, SEEK_SET)            = 24
11609 write(1, "\n\nExtracting fro", 16) = 16
11609 write(1, "m ", 2)                 = 2
11609 write(1, "files.rar\n", 10)       = 10
11609 lseek(3, 0, SEEK_CUR)             = 24
11609 read(3, "\344\337i\226$\2\2", 7)  = 7
11609 read(3, "\322\10\6\205\36\264\203\2s\31\234aJ\351\275\223\200\3\1\16hash_tables.py", 34) = 34
11609 umask(022)                        = 002
11609 umask(002)                        = 022
11609 lseek(3, 65, SEEK_SET)            = 65
11609 access("hash_tables.py", F_OK)    = -1 ENOENT (No such file or directory)
11609 openat(AT_FDCWD, "hash_tables.py", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 4
11609 ioctl(4, TCGETS, 0x7ffda36cdb70)  = -1 ENOTTY (Inappropriate ioctl for device)
11609 write(1, "\nExtracting  ", 13)    = 13
11609 write(1, "hash_tables.py  ", 16)  = 16
11609 write(1, "                ", 16)  = 16
11609 write(1, "                ", 16)  = 16
11609 write(1, "        ", 8)           = 8
11609 write(1, "     ", 5)              = 5
11609 mmap(NULL, 266240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f7a95cbc000
11609 read(3, "\316\336N\0040d43D?6\4^\353\302\2549\301\247\"\305\255\260'\34\0230\f\202H&\201$\310&\344\234Xa\vi[\305cSIKIG\34\367\270\377\4\225iZ\264\223\335\334\311\242xS\340\222\264\211\252\242n\225\253~;g\373D\331?Q\"\210\240y\327\207\247t\363*\223(\362\3056\347,\303G\n-\352:\274\347:\250C\216C!\350\240\337\210p\217\310\373$Gk\206\37\321#i\240\2012\246\220\342\350CI\265\343KV\350(\222jh\16\250O<\23\241U\342\f3C\r@\27,<:\24\2063\311\5*Hq\30x\304P0p\10\254\313\25/\304\26\373\0\33\272\340\275\3506\210\306\31\254W\242X\177\350\231\327z\r\244\267D\326+\321,_\272&u\271\210\273\16h\334\211k^\2449;q\7\364\334\243G\255\245\256k\300\313?\301\2754\201,3I\"hL\322\220vw-\277\312\252X\26\206\34\230,\206\277r~\10=\261\33fP\305\242!U\v\17\371\254%\253)tX\277V\315\37)WK\206f\374\254\253 =6d\377V}cV\267\232\33\225$*o\240\256\334\236_\351\211\333\203%\0\247%\24\212p\352\213&$\373\226\21\324\0023\261\0]\334\271\353d\212\340\4\27\233\270h\366l \2c\250\177\323\fs&\24z\3\312w\315\2\345>f{\"6\323\316\302\222\364F0\301\352\2723\254\337P\10\320\334\243x\5l\228;\252\31\252\226\221Dw\342{\200XU\276pa\330K\265\3420\37\5\360\255$\311+!bL@\263\25\272?\270E\375\f\33\371\315\330nO\34'\331\207\321f\vO\304\17y\262~\n<4\214X-v\330RT\26\370\323\fe\177C\202\177\304\30N\315\376\233\213\32\360%\200\207\3d{\250\237\334'R)\251R\365!\234f\202\370\36\372\275gp\\\253\227'\350\362\361\373\274{M\355\335=~\2670\20\334Y\266\2\2758Q\36\362\352:\350\312\363\315z\6H\36`\301N\376`'s\206r\4\307\351\373\376p{\277/\37/p]}\27\n\r\373YBF\203m\0\300\242\33\v\16\350$\33\204\325VA\366KX\330\203*\27\243\202\3447\317;\327\264U\"\376\v~\266y\226\217\23\327\177Qit\231`\234\273\267\246\220\343T\265\34\340l\310\327R\331\20\26\20\2\250\241f\251\6\26,\340{\232nZ\357\264(C\214\0\362\334\7\177\376\2277\232\321\351\256\1\357i\364\362\241\357v\35\0255\21\366\263}\206\307\360\351\277\356\362\363\20\245\\kO\356\270\327\177\33\364\361\232\21z\30/\214J\343C\332[\324A#\253\212\r\20_'\353P\275B\336\262e\255R\333y-k\207\352\2369\1u\36-\26\274m\252\233r\373\325l\344\16\307*\t\357\276]\345\370I\274\374\2\17c\36\2353\7eQ\f\264\250\270/\377\243\335\366\rs\362\17\217\22[\327\277O\235\271\253\255U\301a\220\306\210}\360[\260M\333\373\327E!\235\242\371\6\37'\372\231\264\311\346l\276z\315\211z\356\31\250\351\4\25\277\301w\374\3\242\241g\276B\31\367\251S)\334\236\320\r\376\217\"k\370jb&|%\377\213\335\221\372'\f\225\2\266\337\214`Wa\263\304\323k8\177%w}eF\305\262\352\215\300\212\225\321D\321r\230,77\365w\233E\365\310'\376,\362\200d\325H\5[\26\354\301\244\7\3335\31\37\315\\@ra6'\372\347\361\216\353\273\177\237.\350\316\r\33\353z\371g0{\371\354\356\262\371\330\36~\366\372Q\32\25l\20J}\310\16%\266\3309\25>\350/m\311]\321\333I\202\360\375k\360\273\20-aRg\35\215]\331|\27t\20\343\371s]\2|\361E\1\354\220\356^\316\306,\262\274Y\3\273l\223\36\227\253\223\306\375\32$\234\v\321\315\275\236\352\246\216;Y\177\342\26[byu\3479\361\215\312\20\264D\"\35\246\305e\362eYW\224-;\37\346\335\211:\371\22V\207V\241c8\\H\314\270", 1106) = 1106
11609 write(1, "\10\10\10\10 95%", 8)   = 8
11609 write(4, "import random\nimport sys\nimport argparse\n\nclass HashTable:\n    def __init__(self, num_slots, cap_per_slot, occupancy, total_trials, hash_type):\n        self.num_slots = num_slots\n        self.cap_per_slot = cap_per_slot\n        self.occupancy = occupancy\n        self.total_trials = total_trials\n        self.hash_type = hash_type\n\n        self.num_elements = int(occupancy * num_slots * cap_per_slot)\n        self.trials_with_collisions = 0\n\n    def run_hash_table(self):\n        self.trials_with_collisions = 0\n        for seed in range(self.total_trials):\n            random.seed(seed)\n            occupancy_at_slot = [0] * self.num_slots\n            for i in range(self.num_elements):\n                if self.hash_type == \"standard\":\n                    slot_number = self.standard_hashing(occupancy_at_slot)\n                elif self.hash_type == \"2choice\":\n                    slot_number = self.two_choice_hashing(occupancy_at_slot)\n                elif self.hash_type == \"2left\":\n                    slot_number = self.two_left_hashing(occupancy_at_slot)\n                occupancy_at_slot[slot_number] += 1\n            \n            if any([counter > self.cap_per_slot for counter in occupancy_at_slot]):\n                self.trials_with_collisions += 1\n\n        trials_did_not_exceed = 1.0 - (self.trials_with_collisions/self.total_trials)\n        print(\"Fraction of trials in which slot size did not exceed capacity \", trials_did_not_exceed)\n        return trials_did_not_exceed\n\n\n    def standard_hashing(self, occupancy_at_slot):\n        #TODO: Implement standard hashing by picking a slot number randomly between 0 and NUM_SLOTS - 1\n        # Return the final slot number that you pick.\n        slot_num = random.randint(0, self.num_slots - 1)\n        return slot_num\n\n    def two_choice_hashing(self, occupancy_at_slot):\n        #TODO: Implement 2 choice hashing: pick two slot numbers randomly and then pick the less occupied of the 2\n        # Break ties randomly.\n        # Return the final slot number that you pick.\n        num1 = random.randint(0, self.num_slots - 1)\n        num2 = random.randint(0, self.num_slots - 1)\n        if (occupancy_at_slot[num1] < occupancy_at_slot[num2]):\n            return num1\n        elif (occupancy_at_slot[num1] > occupancy_at_slot[num2]):\n            return num2\n        else:\n            tie = random.randint(1,2)\n            if (tie == 1):\n                return num1\n            else:\n                return num2\n            \n        \n\n    def two_left_hashing(self, occupancy_at_slot):\n        #TODO: Implement 2 left hashing: pick two slots numbers from two sub tables and pick the less occupied of the 2\n        # Always break ties towards one sub table\n        # Return the final slot number that you pick.\n        num1 = random.randint(0, self.num_slots / 2 - 1)\n        num2 = random.randint(self.num_slots / 2, self.num_slots - 1)\n        if (occupancy_at_slot[num1] > occupancy_at_slot[num2]):\n            return num2\n        else:\n            return num1\n\ndef check_hash_type(hash_type):\n    if hash_type not in [\"standard\", \"2choice\", \"2left\"]:\n        raise argparse.ArgumentTypeError(\"In valid hash type.  Valid hash types include standard, 2choice, and 2left.\")\n    return hash_type\n\ndef main(args):\n    if args.occupancy > 1:\n        raise(\"Occupancy should be less than or equal to 1\")\n\n    ht = HashTable(100, 5, args.occupancy, 1000, args.hash_type)\n    ht.run_hash_table()\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(description='A hash table.')\n    parser.add_argument('--occupancy', type=float,\n                        help='how occupied is the table')\n    parser.add_argument('--hash_type', type=check_hash_type,\n                        help='type of table:  standard, 2choice, 2left')\n\n    arguments = parser.parse_args()\n    main(arguments)\n\n\n", 3845) = 3845
11609 lseek(3, 1171, SEEK_SET)          = 1171
11609 write(1, "\10\10\10\10\10  OK ", 10) = 10
11609 close(4)                          = 0
11609 utimensat(AT_FDCWD, "hash_tables.py", [UTIME_NOW, {tv_sec=1637620083, tv_nsec=0} /* 2021-11-22T17:28:03-0500 */], 0) = 0
11609 chmod("hash_tables.py", 0100664)  = 0
11609 lseek(3, 0, SEEK_CUR)             = 1171
11609 read(3, "\35wVQ\3\5\4", 7)        = 7
11609 read(3, "\0", 1)                  = 1
11609 munmap(0x7f7a95cfd000, 1052672)   = 0
11609 close(3)                          = 0
11609 stat("files.rar", {st_dev=makedev(0x8, 0x5), st_ino=813587, st_mode=S_IFREG|0664, st_nlink=1, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=1179, st_atime=1643703024 /* 2022-02-01T03:10:24.741073583-0500 */, st_atime_nsec=741073583, st_mtime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_mtime_nsec=125361644, st_ctime=1643702616 /* 2022-02-01T03:03:36.125361644-0500 */, st_ctime_nsec=125361644}) = 0
11609 write(1, "\nAll OK", 7)           = 7
11609 munmap(0x7f7a95cbc000, 266240)    = 0
11609 munmap(0x7f7a95dfe000, 1052672)   = 0
11609 write(1, "\n", 1)                 = 1
11609 exit_group(0)                     = ?
11609 +++ exited with 0 +++
